// peeph-ez80_z80.def - eZ80_Z80 specific peephole rules
//
// (c) Philipp Klaus Krause (pkk@spth.de, philipp@colecovision.eu) 2006 - 2020
//
// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option) any
// later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

replace {
	inc	%1
	inc	%1
} by {
	;peephole ez80-1: replace 2 increments of index register by one LEA instruction
	lea	%1, %1, #+2
} if canAssign('d' '0' %1)

replace {
	lea	%1, %2, #%3
	inc	%1
} by {
	lea	%1, %2, #%4
	;peephole ez80-2: replace decrement by decreased index of LEA instruction
} if immdInRange(-128 127 '+' %3 1 %4)

replace {
	dec	%1
	dec	%1
} by {
	;peephole ez80-3: replace 2 decrements of index register by one LEA instruction
	lea	%1, %1, #-2
} if canAssign('e' '0' %1)

replace {
	lea	%1, %2, #%3
	dec	%1
} by {
	lea	%1, %2, #%4
	;peephole ez80-4: replace increment by incremented index of LEA instruction
} if immdInRange(-128 127 '-' %3 1 %4)

barrier
